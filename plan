Build a To-Do list as a web-app.

Libraries/Frameworks/Modules/Packages:

- Flask - Serve up app/test server
- wtforms - Handle form submission
- Bootstrap (carefully and with intent)
- flask_bootstrap for Bootstrap 5, import as Bootstrap-Flask. - For render_form() function
- SQLalchemy
- flask_wtf - To streamline form with FlaskForm

See below import statements from previous program for some guidance:


from flask import Flask, redirect, render_template, request, url_for
from flask_bootstrap import Bootstrap5
from flask_sqlalchemy import SQLAlchemy
from sqlalchemy.exc import IntegrityError
from forms import SearchCafeForm, AddCafeForm
import os
from sqlalchemy.orm import DeclarativeBase, Mapped, mapped_column
from sqlalchemy import Integer, String, Boolean
from flask_wtf import FlaskForm
from wtforms import StringField, SubmitField
from wtforms.validators import DataRequired, URL


Log-in system:

- Website will store user-information once they make account. Username, password, e-mail.
- Website will be able to save lists as per person's account

Lists:

- Will be saved via SQL
- Can be linked to user account via parent/child relationship in SQL

Features:

- Users can create named lists.
- Defaults to the first list, user can generate more.
- User can mark list items as important, moving them to top of list.
- User can delete list items or whole lists.
- User should be able to share lists, either via e-mail or link
- User can name list
- User can set due date for list items

Logic:

- User makes an account to be able to save list
- Begin on default list. Default name, perhaps just today's date?
- Users will be stored in user table, lists in list table, to-do-items in to-do-items table.
- Users will be parent to list-table items, which will be parents to to-do-items.
- This, while not the most concise, is simple, readable and digestible
-



THINGS TO RESEARCH:

- Section tags in HTML
- Nav tags in HTML
- Popovers in Bootstrap
-

Passwords:
    - Need to make a log-in form


REVISED PLAN AS OF 3/13:
    - 4 tables will exist
    - User Table to store user email, password, username
    - To-Do List table to store to-do-list names
    - To-Do List Items table to store items in each to-do list
    - A relationship table to establish many-to-many relationships
            * This is so users can share/edit the same to-do lists.
            * This table just holds two columns, each holding foreign keys to each table.
            * See https://docs.sqlalchemy.org/en/20/orm/basic_relationships.html, Many-to-Many
    - Table will contain relationships between users and a list, specifically so they can edit the same list

